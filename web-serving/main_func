#!/bin/bash 

function start_server(){
    (($DEV)) && echo "start server" 
    clean_containers $SERVER_CONTAINER
    docker run -dt --name $SERVER_CONTAINER --cpuset-cpus=$SERVER_CPUS --net $NET $SERVER_IMAGE /etc/bootstrap.sh 
}

function start_db(){
    (($DEV)) && echo "start database"
    clean_containers $DB_CONTAINER
    docker run -dt --net=$NET --name=$DB_CONTAINER --cpuset-cpus=$DB_CPUS $DB_IMAGE $HOST_IP
}

function start_caching_layer(){
    (($DEV)) && echo "start caching layer"
    clean_containers $CACHING_CONTAINER
    docker run -dt --net=$NET --name=$CACHING_CONTAINER --cpuset-cpus=$CACHING_CPUS $CACHING_IMAGE memcached -u root -m 65535 -t 4 
}

function start_client(){
    (($DEV)) && echo "start client"
    # clean_containers $CLIENT_CONTAINER
    docker run -d --name=$CLIENT_CONTAINER -e JAVA_HOME=$JAVA_HOME --cpuset-cpus=$CLIENT_CPUS --net $NET $CLIENT_IMAGE localhost $USER_NUM 
}

function detect_stage(){
    case "$1" in
    warmup)
        KEYWORDS="Ramp up completed"
        log_helper_stdout ${CLIENT_CONTAINER} "${KEYWORDS}" 1 
        (($DEV)) && echo "Rampup completed"
        ;;
    rampdown)
        KEYWORDS="Ramp down completed"
        log_helper_stdout ${CLIENT_CONTAINER} "${KEYWORDS}" 1
        (($DEV)) && echo "Rampdown completed"
        ;;
    esac
}

function client_summary(){
    awk '{printf "%15s\n",$1 }' $PERF_LOG >> $CLIENT_SUMMARY
    metrics=(BrowsetoElgg DoLogin PostSelfWall AddFriend Register Logout UpdateActivity)

    for metric in ${metrics[@]}; do 
	grep "$metric" -A5 $OUT/client-results/summary.xml | grep "successes" | grep -o '>.*<' | grep -Eo [0-9.]+ >> $CLIENT_SUMMARY
	grep "$metric" -A5 $OUT/client-results/summary.xml | grep "percentile" | grep -o '>.*<' | grep -Eo [0-9.]+ >> $CLIENT_SUMMARY
    done 
}
