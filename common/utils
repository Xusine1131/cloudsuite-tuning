#!/bin/bash 

function cvt_cpu() {
# convert an array of cpus (1,2 3) into a string 1,2,3
    local str_cpus=`echo $WORKER_CPUS`
    CNT=1
    while [[ ${CNT} -lt ${NUM_WORKERS} ]]; do
        str_cpus="$str_cpus,${WORKER_CPUS[${CNT}]}"
        CNT=$((CNT + 1))
    done
    echo $str_cpus
}

function create_dataset(){
    echo "create dataset"
    [ ! "$(docker ps -a | grep ${DATASET_CONTAINER})" ] && docker create --name ${DATASET_CONTAINER} ${DATASET_IMAGE}
}

function create_network(){
    echo "create network"
    [ ! "$(docker network ls | grep ${NET})" ] && docker network create ${NET}
}

function clean_containers(){
    # remove all containers whose name contains the keyword 
    [ "$(docker ps -a | grep $1)" ] && echo "target found" && docker ps --filter name="$1" -aq | xargs docker stop | xargs docker rm
}

function log_helper_stderr () {
    # Look for the key words in stderr (2) of docker logs output 
    # $1: container_name, $2: keyword, $3: delay (default=1)
    # echo "second arg is \"$2\""
    while true; do
        if docker logs "$1" 2>&1 | grep -q "$2"; then
            echo "$1 is ready"
            return  
        else
            echo "$1 is not ready"
            sleep ${3-1}
        fi
    done
}

function log_helper_stdout () {
    # Look for the key words in stdout (1) of docker logs output 
    # $1: container_name, $2: keyword, $3: delay (default=1)
    # echo "second arg is \"$2\""
    while true; do
        if docker logs "$1" 2>/dev/null | grep -q "$2"; then
            echo "$1 is ready"
            return  
        else
            echo "$1 is not ready"
            sleep ${3-1}
        fi
    done
}

